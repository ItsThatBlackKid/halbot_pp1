{"ast":null,"code":"var _jsxFileName = \"/home/saokan/uni/halbot/src/components/chatInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport Slider from 'react-slick';\nimport { sendMessageToLex } from '../services/lexServices';\nimport './ChatInterface.css'; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [inputMessage, setInputMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const sliderRef = useRef(null);\n  useEffect(() => {\n    // Scroll to bottom of the chat history when chat history updates\n    if (sliderRef.current) {\n      sliderRef.current.slickGoTo(chatHistory.length);\n    }\n  }, [chatHistory]);\n  const handleInputChange = e => {\n    setInputMessage(e.target.value);\n  };\n  const handleSendMessage = async () => {\n    if (inputMessage.trim() !== '') {\n      // Send user message to Lex\n      const response = await sendMessageToLex(inputMessage);\n      // Update chat history with user message and Lex response\n      setChatHistory([...chatHistory, {\n        user: inputMessage,\n        bot: response\n      }]);\n      setInputMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-box\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"HAL BOT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      ref: sliderRef,\n      dots: false,\n      arrows: false,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      vertical: true,\n      className: \"chat-history\",\n      children: chatHistory.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"user-message\",\n          children: [\"User: \", message.user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bot-message\",\n          children: [\"Bot: \", message.bot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: handleInputChange,\n        placeholder: \"Type your message...\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"8gSVctpR4fjoWTMTqpAFB39W6Fw=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Slider","sendMessageToLex","jsxDEV","_jsxDEV","ChatInterface","_s","inputMessage","setInputMessage","chatHistory","setChatHistory","sliderRef","current","slickGoTo","length","handleInputChange","e","target","value","handleSendMessage","trim","response","user","bot","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","vertical","map","message","index","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/saokan/uni/halbot/src/components/chatInterface.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { sendMessageToLex } from '../services/lexServices';\r\nimport './ChatInterface.css'; // Import CSS file for styling\r\n\r\nconst ChatInterface = () => {\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const sliderRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Scroll to bottom of the chat history when chat history updates\r\n    if (sliderRef.current) {\r\n      sliderRef.current.slickGoTo(chatHistory.length);\r\n    }\r\n  }, [chatHistory]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputMessage(e.target.value);\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (inputMessage.trim() !== '') {\r\n      // Send user message to Lex\r\n      const response = await sendMessageToLex(inputMessage);\r\n      // Update chat history with user message and Lex response\r\n      setChatHistory([...chatHistory, { user: inputMessage, bot: response }]);\r\n      setInputMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-interface\">\r\n      <div className=\"header-box\">\r\n        <h1>HAL BOT</h1>\r\n      </div>\r\n      <Slider\r\n        ref={sliderRef}\r\n        dots={false}\r\n        arrows={false}\r\n        infinite={false}\r\n        speed={500}\r\n        slidesToShow={1}\r\n        slidesToScroll={1}\r\n        vertical={true}\r\n        className=\"chat-history\"\r\n      >\r\n        {chatHistory.map((message, index) => (\r\n          <div key={index} className=\"message\">\r\n            <p className=\"user-message\">User: {message.user}</p>\r\n            <p className=\"bot-message\">Bot: {message.bot}</p>\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n      <div className=\"message-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputMessage}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Type your message...\"\r\n          className=\"input-field\"\r\n        />\r\n        <button onClick={handleSendMessage} className=\"send-button\">Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}