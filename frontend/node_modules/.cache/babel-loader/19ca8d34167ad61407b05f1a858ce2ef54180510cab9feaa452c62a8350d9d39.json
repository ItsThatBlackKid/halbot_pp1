{"ast":null,"code":"import AWS from 'aws-sdk';\nAWS.config.update({\n  region: 'ap-southeast-2',\n  accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID,\n  secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY\n});\nconst lexruntime = new AWS.LexRuntime();\nexport const sendMessageToLex = async inputText => {\n  const params = {\n    botAlias: 'TestBotAlias',\n    botName: 'HAL_R_2',\n    inputText,\n    userId: 'user123'\n  };\n  try {\n    const data = await lexruntime.postText(params).promise();\n    return {\n      success: true,\n      message: data.message\n    };\n  } catch (error) {\n    console.error('Error communicating with Amazon Lex:', error);\n    return {\n      success: false,\n      message: 'Error communicating with Amazon Lex'\n    };\n  }\n};","map":{"version":3,"names":["AWS","config","update","region","accessKeyId","process","env","REACT_APP_AWS_ACCESS_KEY_ID","secretAccessKey","REACT_APP_AWS_SECRET_ACCESS_KEY","lexruntime","LexRuntime","sendMessageToLex","inputText","params","botAlias","botName","userId","data","postText","promise","success","message","error","console"],"sources":["/home/saokan/uni/halbot/src/services/lexServices.jsx"],"sourcesContent":["import AWS from 'aws-sdk';\r\n\r\nAWS.config.update({\r\n  region: 'ap-southeast-2',\r\n  accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID,\r\n  secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY\r\n});\r\n\r\nconst lexruntime = new AWS.LexRuntime();\r\n\r\nexport const sendMessageToLex = async (inputText) => {\r\n  const params = {\r\n    botAlias: 'TestBotAlias',\r\n    botName: 'HAL_R_2',\r\n    inputText,\r\n    userId: 'user123'\r\n  };\r\n\r\n  try {\r\n    const data = await lexruntime.postText(params).promise();\r\n    return { success: true, message: data.message };\r\n  } catch (error) {\r\n    console.error('Error communicating with Amazon Lex:', error);\r\n    return { success: false, message: 'Error communicating with Amazon Lex' };\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,SAAS;AAEzBA,GAAG,CAACC,MAAM,CAACC,MAAM,CAAC;EAChBC,MAAM,EAAE,gBAAgB;EACxBC,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC,2BAA2B;EACpDC,eAAe,EAAEH,OAAO,CAACC,GAAG,CAACG;AAC/B,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAG,IAAIV,GAAG,CAACW,UAAU,CAAC,CAAC;AAEvC,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,SAAS,IAAK;EACnD,MAAMC,MAAM,GAAG;IACbC,QAAQ,EAAE,cAAc;IACxBC,OAAO,EAAE,SAAS;IAClBH,SAAS;IACTI,MAAM,EAAE;EACV,CAAC;EAED,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMR,UAAU,CAACS,QAAQ,CAACL,MAAM,CAAC,CAACM,OAAO,CAAC,CAAC;IACxD,OAAO;MAAEC,OAAO,EAAE,IAAI;MAAEC,OAAO,EAAEJ,IAAI,CAACI;IAAQ,CAAC;EACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,OAAO;MAAEF,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAsC,CAAC;EAC3E;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}